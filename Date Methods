{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3359378e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#design a programme which get date of today in day,month and year from client  \n",
    "#and return it in day/month/year patern. This code using function and try to guid client for enter incorrect number:\n",
    "#1-negetive numbers\n",
    "#2-srt instead of int\n",
    "#3-incorrect range for year, month,day\n",
    "#4-accidental incorrect value\n",
    "#5-incorrect day for months. first six = 31day, secound five =30day and esfand=29 for normal year and 30 for leap(kabise) year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "059ddfd1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 1\n",
    "def main(): #define main function\n",
    "    \n",
    "    year = yearfunct() #call yearfunct and assign it to year\n",
    "    month = monthfunct() #call monthfunct and assign it to month\n",
    "    day = dayfunct(month[1],year[1],month[0])  \n",
    "    #call dayfunct and input 3 argumant from month and year lists (monthfunct and yearfunct output) and assign it to year'''\n",
    "    \n",
    "    datesorter(day,month[0],year[0]) #send data that get from functions to function datesorter and call it.\n",
    "    \n",
    "def datesorter(d,m,y):  #define datesorter function \n",
    "    print (f\"today is {d}/{m}/{y}.\")  #print date in corect order\n",
    "    \n",
    "def yearfunct(): #define year function \n",
    "    while True: #use while loop for control client input\n",
    "        try:    #use try to control ValueError \n",
    "            year = input(\"which year of century is today? \\n\") #get year  from client\n",
    "            intyear = int(year) ###'''convert str to int ##### NOTE: We should use int() function sepreted from input() \n",
    "                                  ###  for better ValueErrore control. if we use int(input()) and client input a negetive number\n",
    "                                  ###  first and then a string , because the Variable assign to an int then in print function\n",
    "                                  ###  we cant print his/her incorrect value.\n",
    "                                    ###اگر از دستور \n",
    "                                  ###  int(input())\n",
    "                                 ###   در یک خط استفاده شود. پس از آنکه کار بر به اشتباه عدد منفی وارد کند و بعد مجدد یک استرینگ به جای عدد وارد کند حلقه \n",
    "                                ###    try\n",
    "                                ##    خروجی استرینگ را نمایش نمیدهد و به جای آن عدد منفی قبلی را نمایش می دهد'''\n",
    "            \n",
    "            if intyear >=0 and intyear <=99: #check if client enterd year in two number format or incorrect\n",
    "                    checkyear1300 = intyear + 1300\n",
    "                    checkyear1400 = intyear + 1400\n",
    "                    checkyear = input(f'''you entered {year} for year(choose 1,2 or 3) : #ask client what t\n",
    "                    1-I mean {checkyear1300}\n",
    "                    2-I mean {checkyear1400}\n",
    "                    3-None of the above. I entered incorrect year. let me try again.''' )\n",
    "                    if checkyear == '1':\n",
    "                        year = checkyear1300\n",
    "                        break\n",
    "                    elif checkyear == '2':\n",
    "                        year = checkyear1400\n",
    "                        break\n",
    "                    else:\n",
    "                        yearfunct()\n",
    "                        break\n",
    "            elif intyear > 99 and intyear < 1300: #check if client enter correct form if year number was lower than 1300\n",
    "                    checkyear = input(f'''you entered {year} for year. it may not a correct year. Do you whant to continue?:\n",
    "                    (enter number 1 or 2)\n",
    "                    1-yes, im just curious what happen :))\n",
    "                    2-No! I  entered incorrect year. let me try again.''' )\n",
    "                    if checkyear == '1':\n",
    "                        year = checkyear\n",
    "                        break\n",
    "                    else:\n",
    "                        yearfunct()\n",
    "                        break\n",
    "            elif intyear >= 1300:\n",
    "                year = intyear\n",
    "                break          \n",
    "            else:\n",
    "                print(f'{year} is not a posetive number. plz enter posetive number for year.')\n",
    "                \n",
    "        except ValueError: #try_ecxept for ValueError\n",
    "            print(f'{year} is not a correct value. plz enter number for year')\n",
    "            continue\n",
    "            \n",
    "    _kabiseh = int(year) % 33 #'''check if the year is Leap(kabiseh). if remaining of devide year to 33 be \n",
    "                                #    in the folowing list then it mean the year is Leap(kabise) Year.'''\n",
    "    if _kabiseh in [1, 5, 9, 13, 17, 22, 26, 30]:\n",
    "        _year = 'kabiseh'\n",
    "    else:\n",
    "        _year = 'not_kabiseh'\n",
    "        \n",
    "    return year,_year #return needed values in list type\n",
    "\n",
    "def monthfunct(): #define month function\n",
    "    while True:\n",
    "            try:\n",
    "                month = input(\"which month of year is today? \") #get month  from client\n",
    "                intmonth = int(month)\n",
    "                if intmonth >=0 and intmonth <=12 :#check if the month is in correct range\n",
    "                    break\n",
    "                else:\n",
    "                    print(f'{month} is not in correct range. plz enter a correct number between 0 and 12 for months.')\n",
    "            except ValueError:\n",
    "                print(f'{month} is not a correct value. plz enter a number for months')\n",
    "                continue\n",
    "    if intmonth <= 6: #try to devide month in 3 range order\n",
    "        monthcheck = 'month31'\n",
    "    elif intmonth >6 and intmonth <=11:\n",
    "        monthcheck = 'month30'\n",
    "    else:\n",
    "        monthcheck = 'month29'\n",
    "        \n",
    "    return intmonth,monthcheck #return needed values in list type\n",
    "\n",
    "def dayfunct(monthcheck,_year,intmonth): #define day function with two input arguman\n",
    "    \n",
    "    while True: #use while loop\n",
    "        if  monthcheck == 'month31': #try to check if the first 6 monthes then all are easy have 31 days :)\n",
    "            try: #try fo control ValueErorr\n",
    "                day = input(\"which day of month is today? \") #get day  from client\n",
    "                intday = int(day)\n",
    "                if intday  >=0 and intday  <=31 :\n",
    "                    break  \n",
    "                else:\n",
    "                    print(f'{day} is not correct. for the first 6 months you should enter days between 0 and 31.')\n",
    "            except ValueError:\n",
    "                print(f'{day} is not a correct value. plz entere number for days')\n",
    "                continue #continue loop then client can enter correct value again\n",
    "                \n",
    "        elif _year == 'kabiseh' and (monthcheck == 'month30' or monthcheck == 'month29') : #check for Leap year\n",
    "            try:\n",
    "                day = input(\"which day of month is today? \") #get day  from client\n",
    "                intday = int(day)\n",
    "                if intday  >=0 and intday  <=30 :\n",
    "                    break  \n",
    "                else:\n",
    "                    print(f'{day} for the secound 6 months in leap year you should enter days between 0 and 30.')\n",
    "            except ValueError:\n",
    "                print(f'{day} is not a correct value. plz entere number for days')\n",
    "                continue\n",
    "                \n",
    "        elif _year == 'not_kabiseh' and monthcheck == 'month29': #check for last month in non Leap year\n",
    "            try:\n",
    "                day = input(\"which day of month is today? \") #get day  from client\n",
    "                intday = int(day)\n",
    "                if intday  >=0 and intday  <=29 :\n",
    "                    break  \n",
    "                else:\n",
    "                    print(f'you entered {day}. for the last months(Esfand) in nonleap year you should enter days between 0 and 29.')\n",
    "            except ValueError:\n",
    "                print(f'{day} is not a correct value. plz entere number for days')\n",
    "                continue\n",
    "                \n",
    "    return intday #return needed value\n",
    "\n",
    "main() #call main function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d74dd848",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 2\n",
    "def Date (): # Defining Date Function\n",
    "\n",
    "    try:\n",
    "\n",
    "        Today = int(input(\"Enter Day: \"))        # Getting integer input from user\n",
    "        Month = int(input(\"Enter Month: \"))\n",
    "        Year  = int(input(\"Enter Year: \"))\n",
    "        \n",
    "        # here with if statement we're declaring that: for example day's value shouldn't be less that 1 and greater than 31\n",
    "        # Month value should be within 1 to 12 range \n",
    "        # Year value should be within 1800 to 2022 range\n",
    "        \n",
    "\n",
    "        if Today >=1 and Today <=31 and Month >=1 and Month <=12 and Year >= 1800 and Year <= 2022:\n",
    "            \n",
    "            # if our \"if\" statement is correct(True) the code will print: \"The Date is: Date\" message\n",
    "            print (\"The Date is: \" , Today , '/', Month, '/', Year) \n",
    "\n",
    "            \n",
    "            # if the numbers are out of defined range ( for example if user enters 35 for Day's value) the program will return:\n",
    "            #\"Invalid Date\" message\n",
    "        else:\n",
    "            print(\"Invalid Date\")\n",
    "\n",
    "            \n",
    "            #if for any reason user enters non-integer value (for example string or even leave the input blank), the code will \n",
    "            #return : \"Invalid Input\" message\n",
    "    except:\n",
    "        print (\"invalid Input\")\n",
    "Date()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5b84f1a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 3 #Defining outside def()\n",
    "def date(year, month, day):\n",
    "    print(\"\\nToday is: \" + year + \"/\" + month + \"/\" + day)\n",
    "\n",
    "print(\"This program gets the current day, month and year and shows them.\\n\")\n",
    "\n",
    "the_day = input(\"Enter day: \")\n",
    "the_month = input(\"Enter month: \")\n",
    "the_year = input(\"Enter year: \")\n",
    "\n",
    "try:                             \n",
    "    int(the_day) | int(the_month) | int(the_year)\n",
    "except:\n",
    "    print(\"\\n<< Please Enter Numbers! >>\")\n",
    "else:\n",
    "    if int(the_day) not in range(1, 32):\n",
    "        print(\"\\n<< Please Enter a Valid Day Number! >>\")\n",
    "    elif int(the_month) not in range(1, 13):\n",
    "        print(\"\\n<< Please Enter a Valid Month Number! >>\")\n",
    "    elif int(the_year) < 0:\n",
    "        print(\"\\n<< Please Enter a Valid Year Number! >>\")\n",
    "    else:\n",
    "        date(the_year, the_month, the_day)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d867d064",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 4 inside def()\n",
    "def date():\n",
    "    \n",
    "    print(\"This program gets the current day, month and year and shows them.\\n\")\n",
    "    \n",
    "    the_day = input(\"Enter day: \")\n",
    "    the_month = input(\"Enter month: \")\n",
    "    the_year = input(\"Enter year: \")\n",
    "\n",
    "    try:                             # مطمئن می شویم که کاربر عددی صحیح وارد کند try با استفاده از\n",
    "        int(the_day) | int(the_month) | int(the_year)>0\n",
    "    except:\n",
    "        print(\"\\n<< Please Enter Numbers! >>\")\n",
    "    else:\n",
    "        if int(the_day) not in range(1, 32):\n",
    "            print(\"\\n<< Please Enter a Valid Day Number! >>\")\n",
    "        elif int(the_month) not in range(1, 13):\n",
    "            print(\"\\n<< Please Enter a Valid Month Number! >>\")\n",
    "        elif int(the_year) < 0:\n",
    "            print(\"\\n<< Please Enter a Valid Year Number! >>\")\n",
    "        else:\n",
    "            print(\"\\nToday is: \" + the_year + \"/\" + the_month + \"/\" + the_day)\n",
    "            \n",
    "date()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "25d2332b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 5 (Here if user enters wrong input program breaks)\n",
    "def date():\n",
    "    \n",
    "    print(\"This program gets the current day, month and year and shows them. (year/month/day)\\n\")\n",
    "    \n",
    "    \n",
    "    try:                             #With try we make sure user enters correct input\n",
    "        the_day = int(input(\"Enter day: \"))\n",
    "    except:\n",
    "        print(\"\\n<< Please Enter Numbers! >>\")\n",
    "    else:\n",
    "        if int(the_day) not in range(1, 32):\n",
    "            print(\"\\n<< Please Enter a Valid Day Number! >>\")\n",
    "        else:    \n",
    "            \n",
    "            try:                             #With try we make sure user enters correct input\n",
    "                the_month = int(input(\"Enter month: \"))\n",
    "            except:\n",
    "                print(\"\\n<< Please Enter Numbers! >>\")\n",
    "            else:\n",
    "                if int(the_month) not in range(1, 13):\n",
    "                    print(\"\\n<< Please Enter a Valid Month Number! >>\")\n",
    "                else:\n",
    "                    \n",
    "                    try:                             #With try we make sure user enters correct input\n",
    "                        the_year = int(input(\"Enter year: \"))\n",
    "                    except:\n",
    "                        print(\"\\n<< Please Enter Numbers! >>\")\n",
    "                    else:\n",
    "                        if int(the_year) < 0:\n",
    "                            print(\"\\n<< Please Enter a Valid Year Number! >>\")\n",
    "                        else:\n",
    "                            print(\"\\nToday is: \", the_year, \"/\", the_month, \"/\", the_day)\n",
    "            \n",
    "date()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4ff4d42b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 6\n",
    "def valid_Day(day , month) :\n",
    "    if month > 6 :\n",
    "        if day < 1 or day > 30 :\n",
    "            print('Day must be less than 30 !!!!!')\n",
    "            return False # day is not valid\n",
    "    else :\n",
    "        if day < 1 or day > 31 :\n",
    "            print('Day must be less than 31 !!!!!')\n",
    "            return False # day is not valid \n",
    "    return True # day is validate \n",
    "\n",
    "# Checks the correctness of month\n",
    "def valid_Month (month) :\n",
    "    if month < 1 or month > 12 :\n",
    "        print('Month must be between 1 and 12 !!!!!')\n",
    "        return False # month is not valid\n",
    "    return True # month is  valid\n",
    "\n",
    "# this def checks the correctness of year\n",
    "def valid_Year (year) :\n",
    "    if year < 1 :\n",
    "        print('Year must be more than 0 !!!!!')\n",
    "        return False # year is not valid\n",
    "    return True # year is  valid\n",
    "\n",
    "#Print D/M/Y  \n",
    "def Print_Date(d,m,y) :\n",
    "    print ('date is : ',d,m,y , sep = '   ')\n",
    "    print (f'date is : {d} / {m} / {y} ')\n",
    "\n",
    "try :     \n",
    "    yearr  = int(input('Please enter a year :'))  \n",
    "    if valid_Year(yearr) :\n",
    "        \n",
    "        monthh = int(input('Please enter a month :'))  \n",
    "        if valid_Month(monthh ) :\n",
    "            \n",
    "            dayy   = int(input('Please enter a day :'))    \n",
    "            if valid_Day(dayy,monthh) :\n",
    "                \n",
    "                Print_Date (dayy,monthh,yearr)\n",
    "            \n",
    "except ValueError :\n",
    "    print ('enter number !!!!!!')\n",
    "except :\n",
    "    print ('Something is wrong !!!!!!!')\n",
    "finally :\n",
    "    print ('Ok!')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "028ed786",
   "metadata": {},
   "outputs": [],
   "source": [
    "#'Get number from user and show the total date'\n",
    "# Methode 1:\n",
    "\n",
    "def Day(): # Defining Day Function\n",
    "    \n",
    "    try:\n",
    "        Day = int(input(\"Enter Day number: \"))  # Getting integer input from user\n",
    "        \n",
    "        Modulus = Day % 365    #Getting Input modulus\n",
    "        \n",
    "        Years = int (Day / 365)  # to calcute years you have to devide number by 365\n",
    "        Months= int (Modulus / 30)  # to calculate months you have to devide number's modulus by 30\n",
    "        Weeks = int (Modulus / 7)   # to calculate weeks you have to devide number's modulus by 7\n",
    "        Days  = int (Modulus % 7)   # to calculate days you have to get number's modulus by 7\n",
    "    \n",
    "        print (\" Your Entered Day (\" , Day ,  \") is: \" , Years , \"Year(s) and \" , Months , \"Months and\" , Weeks , \" Week(s) and \" ,\n",
    "               Days , \"Day(s)\")  # printing output\n",
    "        \n",
    "        #if for any reason user enters non-integer value (for example string or even leave the input blank), the code will \n",
    "            #return : \"Invalid Input\" message\n",
    "        \n",
    "    except:\n",
    "        print (\"Enter Valid Input\")\n",
    "\n",
    "Day()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de41c13f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get number from user and show the total date\n",
    "#Methode 2\n",
    "def Day(): # Defining Day Function\n",
    "    \n",
    "    try:\n",
    "        \n",
    "        \n",
    "        \n",
    "        Day = int (input (\"Enter Day Number: \"))  # Getting integer input from user\n",
    "        \n",
    "        leap = int ((Day % 400 == 0) or (Day % 100 != 0) or (Day % 4 == 0));  # calculating leap year with if statement\n",
    "        \n",
    "        if Day > 0 and Day == leap:  # if user's input == leap year and bigger than zero\n",
    "            \n",
    "            \n",
    "            # do calculation\n",
    "            Modulus = Day % 366\n",
    "            Years = int (Day / 366)\n",
    "            Months= int (Modulus / 31)\n",
    "            #Weeks = int (Modulus / 7)\n",
    "            Days  = int (Modulus % 7)\n",
    "            \n",
    "            print (\" Your Entered Day (\" , Day ,  \") is: \" , Years , \"Year(s) and \" , Months , \"Months and\" , Weeks , \" Week(s) and \" ,\n",
    "               Days , \"Day(s)\")\n",
    "            \n",
    "            \n",
    "        #if user's input isn't leap year try to calculate input wth 365 but announce the not leap year message to user:\n",
    "        else:\n",
    "            if Day > 0:\n",
    "                Modulus = Day % 365\n",
    "                Years = int (Day / 365)\n",
    "                Months= int (Modulus / 30)\n",
    "                #Weeks = int (Modulus / 7)\n",
    "                Days  = int (Modulus % 7)\n",
    "            \n",
    "                print (\" Your Entered Day (\" , Day ,  \") is: \" , Years , \"Year(s) and \" , Months , \"Months and\" , # \" Week(s) and \" ,\n",
    "                   Days , \"Day(s) BUT  not a leap year\")\n",
    "                   \n",
    "            else:  # if user enters negative value this message will pop up :)\n",
    "                print (\"Enter positive number\") \n",
    "    except:\n",
    "        print (\" Enter Valid Input \")\n",
    "Day()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dd605e94",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Methode 3\n",
    "def main(): #define main function\n",
    "    \n",
    "    dateconverter() #send data that get from client to function dateconverter\n",
    "    \n",
    "    \n",
    "def dateconverter():  #define dataconverter function \n",
    "    \n",
    "    while True: #use whie for repeated geting value\n",
    "        try: #try for che ValueError\n",
    "            totaldates = input(\"How many days do you whant to convert? \") #get total days from client\n",
    "            inttotaldates = int(totaldates) #convert str to int\n",
    "            if inttotaldates >=0: #check if the number is posetive\n",
    "                if inttotaldates >= 365: #check if the number is equal or more than one year\n",
    "                    year = inttotaldates//365 #return the correct part of number\n",
    "                    totaldates2 = inttotaldates%365 #return the remainer\n",
    "                    print (f\"{inttotaldates} day/s are {year} year, {totaldates2//31} months and {totaldates2%31} days\")\n",
    "                    break\n",
    "                else :\n",
    "                    print (f\"{inttotaldates} day/s are {inttotaldates//31} months and {inttotaldates%31} days\") \n",
    "                    break\n",
    "            else:\n",
    "                print(f'{inttotaldates} is not a posetive number. enter a posetive one.')\n",
    "        except ValueError:\n",
    "            print(f'{totaldates} is not a number. plz enter a valid number.')\n",
    "\n",
    "    '''beacause \"//\" return \n",
    "    the devisor and return 0 when quotient smaller than dividend and \"%\" return remianer and return\n",
    "    quotient itself when it is smaller than divident, we can used them just that simple for solve \n",
    "    the issue'''\n",
    "\n",
    "main() #call main function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1fcf9199",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 4\n",
    "print('''This program gets a total number of days and calculates \n",
    "the number of years, months and days based on it.\\n''')\n",
    "\n",
    "the_days = input(\"Enter the number of days: \")\n",
    "\n",
    "try:                             \n",
    "    the_days = int(the_days)\n",
    "except:\n",
    "    print(\"\\n<< Please Enter A Number! >>\")\n",
    "else:\n",
    "    if int(the_days) <= 0:\n",
    "        print(\"\\n<< Please Enter A Positive Number! >>\")\n",
    "    else:\n",
    "\n",
    "# A regular year (r_year) is 365 days.                     \n",
    "# A leap year (l_year) is 366 days.                        \n",
    "# Every 4 years (3 + 1) would be 1461 days (3*365 + 366).  \n",
    "\n",
    "        n = the_days // 1461\n",
    "        days = the_days % 1461\n",
    "        l_years = n\n",
    "        r_years = n * 3\n",
    "        \n",
    "        if days == 1460:         # This is a special case. \n",
    "            year = days // 365 - 1\n",
    "            r_years = r_years + year\n",
    "            months = 11\n",
    "            days = 29\n",
    "        else:                    # or: elif days != 1460: \n",
    "            year = days // 365\n",
    "            r_years = r_years + year\n",
    "            days = days % 365\n",
    "            if days > 336:\n",
    "                mon_31 = 6\n",
    "                mon_30 = 5\n",
    "                months = mon_31 + mon_30\n",
    "                days = days - 336\n",
    "            elif days > 186:\n",
    "                mon_31 = 6\n",
    "                mon_30 = (days-186) // 30\n",
    "                months = mon_31 + mon_30\n",
    "                days = (days-186) % 30\n",
    "            else:\n",
    "                months = days // 31\n",
    "                days = days % 31\n",
    "                \n",
    "        print()\n",
    "        print(the_days, \"days is\", l_years, \"Leap Year(s),\", r_years, \"Year(s),\", \n",
    "              months, \"Month(s) and\", days, \"Day(s).\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "44e82067",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Method 5\n",
    "try :\n",
    "    dayy   = int(input('Please enter a day :'))  \n",
    "    \n",
    "    y = dayy // 365\n",
    "    dayy = dayy % 365\n",
    "    if dayy == 0 :\n",
    "        m = 0\n",
    "        d = 0\n",
    "    elif dayy > 0 and dayy < 187 : # The first 6 month of year : 31 days  \n",
    "        m = dayy // 31\n",
    "        d = dayy % 31\n",
    "    else :                       # The second 6 month of year : 30 days  \n",
    "        dayy = dayy - 186\n",
    "        m = (dayy // 30)+ 6\n",
    "        d = dayy % 30\n",
    "\n",
    "    print ('The number of year is  {:.^8} and the number of month is {:.^8} and the number of day is {:.^8}'.format(str(y),str(m),str(d)) )\n",
    "                    \n",
    "            \n",
    "except ValueError :\n",
    "    print ('enter number !!!!!!')\n",
    "except :\n",
    "    print ('Something is wrong !!!!!!!')\n",
    "finally :\n",
    "    print ('Ok!')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "25ae7924",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
