#design a programme which get date of today in day,month and year from client
#and return it in day/month/year patern. This code using function and try to guid client for enter incorrect number:
#1-negetive numbers
#2-srt instead of int
#3-incorrect range for year, month,day
#4-accidental incorrect value
#5-incorrect day for months. first six = 31day, secound five =30day and esfand=29 for normal year and 30 for leap(kabise) year

#Method 1
def main(): #define main function
    
    year = yearfunct() #call yearfunct and assign it to year
    month = monthfunct() #call monthfunct and assign it to month
    day = dayfunct(month[1],year[1],month[0])  
    #call dayfunct and input 3 argumant from month and year lists (monthfunct and yearfunct output) and assign it to year'''
    
    datesorter(day,month[0],year[0]) #send data that get from functions to function datesorter and call it.
    
def datesorter(d,m,y):  #define datesorter function 
    print (f"today is {d}/{m}/{y}.")  #print date in corect order
    
def yearfunct(): #define year function 
    while True: #use while loop for control client input
        try:    #use try to control ValueError 
            year = input("which year of century is today? \n") #get year  from client
            intyear = int(year) ###'''convert str to int ##### NOTE: We should use int() function sepreted from input() 
                                  ###  for better ValueErrore control. if we use int(input()) and client input a negetive number
                                  ###  first and then a string , because the Variable assign to an int then in print function
                                  ###  we cant print his/her incorrect value.
                                    ###اگر از دستور 
                                  ###  int(input())
                                 ###   در یک خط استفاده شود. پس از آنکه کار بر به اشتباه عدد منفی وارد کند و بعد مجدد یک استرینگ به جای عدد وارد کند حلقه 
                                ###    try
                                ##    خروجی استرینگ را نمایش نمیدهد و به جای آن عدد منفی قبلی را نمایش می دهد'''
            
            if intyear >=0 and intyear <=99: #check if client enterd year in two number format or incorrect
                    checkyear1300 = intyear + 1300
                    checkyear1400 = intyear + 1400
                    checkyear = input(f'''you entered {year} for year(choose 1,2 or 3) : #ask client what t
                    1-I mean {checkyear1300}
                    2-I mean {checkyear1400}
                    3-None of the above. I entered incorrect year. let me try again.''' )
                    if checkyear == '1':
                        year = checkyear1300
                        break
                    elif checkyear == '2':
                        year = checkyear1400
                        break
                    else:
                        yearfunct()
                        break
            elif intyear > 99 and intyear < 1300: #check if client enter correct form if year number was lower than 1300
                    checkyear = input(f'''you entered {year} for year. it may not a correct year. Do you whant to continue?:
                    (enter number 1 or 2)
                    1-yes, im just curious what happen :))
                    2-No! I  entered incorrect year. let me try again.''' )
                    if checkyear == '1':
                        year = checkyear
                        break
                    else:
                        yearfunct()
                        break
            elif intyear >= 1300:
                year = intyear
                break          
            else:
                print(f'{year} is not a posetive number. plz enter posetive number for year.')
                
        except ValueError: #try_ecxept for ValueError
            print(f'{year} is not a correct value. plz enter number for year')
            continue
            
    _kabiseh = int(year) % 33 #'''check if the year is Leap(kabiseh). if remaining of devide year to 33 be 
                                #    in the folowing list then it mean the year is Leap(kabise) Year.'''
    if _kabiseh in [1, 5, 9, 13, 17, 22, 26, 30]:
        _year = 'kabiseh'
    else:
        _year = 'not_kabiseh'
        
    return year,_year #return needed values in list type

def monthfunct(): #define month function
    while True:
            try:
                month = input("which month of year is today? ") #get month  from client
                intmonth = int(month)
                if intmonth >=0 and intmonth <=12 :#check if the month is in correct range
                    break
                else:
                    print(f'{month} is not in correct range. plz enter a correct number between 0 and 12 for months.')
            except ValueError:
                print(f'{month} is not a correct value. plz enter a number for months')
                continue
    if intmonth <= 6: #try to devide month in 3 range order
        monthcheck = 'month31'
    elif intmonth >6 and intmonth <=11:
        monthcheck = 'month30'
    else:
        monthcheck = 'month29'
        
    return intmonth,monthcheck #return needed values in list type

def dayfunct(monthcheck,_year,intmonth): #define day function with two input arguman
    
    while True: #use while loop
        if  monthcheck == 'month31': #try to check if the first 6 monthes then all are easy have 31 days :)
            try: #try fo control ValueErorr
                day = input("which day of month is today? ") #get day  from client
                intday = int(day)
                if intday  >=0 and intday  <=31 :
                    break  
                else:
                    print(f'{day} is not correct. for the first 6 months you should enter days between 0 and 31.')
            except ValueError:
                print(f'{day} is not a correct value. plz entere number for days')
                continue #continue loop then client can enter correct value again
                
        elif _year == 'kabiseh' and (monthcheck == 'month30' or monthcheck == 'month29') : #check for Leap year
            try:
                day = input("which day of month is today? ") #get day  from client
                intday = int(day)
                if intday  >=0 and intday  <=30 :
                    break  
                else:
                    print(f'{day} for the secound 6 months in leap year you should enter days between 0 and 30.')
            except ValueError:
                print(f'{day} is not a correct value. plz entere number for days')
                continue
                
        elif _year == 'not_kabiseh' and monthcheck == 'month29': #check for last month in non Leap year
            try:
                day = input("which day of month is today? ") #get day  from client
                intday = int(day)
                if intday  >=0 and intday  <=29 :
                    break  
                else:
                    print(f'you entered {day}. for the last months(Esfand) in nonleap year you should enter days between 0 and 29.')
            except ValueError:
                print(f'{day} is not a correct value. plz entere number for days')
                continue
                
    return intday #return needed value

main() #call main function

###########################################################################################################################################################################

#Method 2
def Date (): # Defining Date Function

    try:

        Today = int(input("Enter Day: "))        # Getting integer input from user
        Month = int(input("Enter Month: "))
        Year  = int(input("Enter Year: "))
        
        # here with if statement we're declaring that: for example day's value shouldn't be less that 1 and greater than 31
        # Month value should be within 1 to 12 range 
        # Year value should be within 1800 to 2022 range
        

        if Today >=1 and Today <=31 and Month >=1 and Month <=12 and Year >= 1800 and Year <= 2022:
            
            # if our "if" statement is correct(True) the code will print: "The Date is: Date" message
            print ("The Date is: " , Today , '/', Month, '/', Year) 

            
            # if the numbers are out of defined range ( for example if user enters 35 for Day's value) the program will return:
            #"Invalid Date" message
        else:
            print("Invalid Date")

            
            #if for any reason user enters non-integer value (for example string or even leave the input blank), the code will 
            #return : "Invalid Input" message
    except:
        print ("invalid Input")
Date()

######################################################################################################################################################################

#Method 3 #Defining outside def()
def date(year, month, day):
    print("\nToday is: " + year + "/" + month + "/" + day)

print("This program gets the current day, month and year and shows them.\n")

the_day = input("Enter day: ")
the_month = input("Enter month: ")
the_year = input("Enter year: ")

try:                             
    int(the_day) | int(the_month) | int(the_year)
except:
    print("\n<< Please Enter Numbers! >>")
else:
    if int(the_day) not in range(1, 32):
        print("\n<< Please Enter a Valid Day Number! >>")
    elif int(the_month) not in range(1, 13):
        print("\n<< Please Enter a Valid Month Number! >>")
    elif int(the_year) < 0:
        print("\n<< Please Enter a Valid Year Number! >>")
    else:
        date(the_year, the_month, the_day)

#########################################################################################################################################################

#Method 4 inside def()
def date():
    
    print("This program gets the current day, month and year and shows them.\n")
    
    the_day = input("Enter day: ")
    the_month = input("Enter month: ")
    the_year = input("Enter year: ")

    try:                             # مطمئن می شویم که کاربر عددی صحیح وارد کند try با استفاده از
        int(the_day) | int(the_month) | int(the_year)>0
    except:
        print("\n<< Please Enter Numbers! >>")
    else:
        if int(the_day) not in range(1, 32):
            print("\n<< Please Enter a Valid Day Number! >>")
        elif int(the_month) not in range(1, 13):
            print("\n<< Please Enter a Valid Month Number! >>")
        elif int(the_year) < 0:
            print("\n<< Please Enter a Valid Year Number! >>")
        else:
            print("\nToday is: " + the_year + "/" + the_month + "/" + the_day)
            
date()

##################################################################################################################################################################

#Method 5 (Here if user enters wrong input program breaks)
def date():
    
    print("This program gets the current day, month and year and shows them. (year/month/day)\n")
    
    
    try:                             #With try we make sure user enters correct input
        the_day = int(input("Enter day: "))
    except:
        print("\n<< Please Enter Numbers! >>")
    else:
        if int(the_day) not in range(1, 32):
            print("\n<< Please Enter a Valid Day Number! >>")
        else:    
            
            try:                             #With try we make sure user enters correct input
                the_month = int(input("Enter month: "))
            except:
                print("\n<< Please Enter Numbers! >>")
            else:
                if int(the_month) not in range(1, 13):
                    print("\n<< Please Enter a Valid Month Number! >>")
                else:
                    
                    try:                             #With try we make sure user enters correct input
                        the_year = int(input("Enter year: "))
                    except:
                        print("\n<< Please Enter Numbers! >>")
                    else:
                        if int(the_year) < 0:
                            print("\n<< Please Enter a Valid Year Number! >>")
                        else:
                            print("\nToday is: ", the_year, "/", the_month, "/", the_day)
            
date()

##################################################################################################################################################################

#Method 6
def valid_Day(day , month) :
    if month > 6 :
        if day < 1 or day > 30 :
            print('Day must be less than 30 !!!!!')
            return False # day is not valid
    else :
        if day < 1 or day > 31 :
            print('Day must be less than 31 !!!!!')
            return False # day is not valid 
    return True # day is validate 

# Checks the correctness of month
def valid_Month (month) :
    if month < 1 or month > 12 :
        print('Month must be between 1 and 12 !!!!!')
        return False # month is not valid
    return True # month is  valid

# this def checks the correctness of year
def valid_Year (year) :
    if year < 1 :
        print('Year must be more than 0 !!!!!')
        return False # year is not valid
    return True # year is  valid

#Print D/M/Y  
def Print_Date(d,m,y) :
    print ('date is : ',d,m,y , sep = '   ')
    print (f'date is : {d} / {m} / {y} ')

try :     
    yearr  = int(input('Please enter a year :'))  
    if valid_Year(yearr) :
        
        monthh = int(input('Please enter a month :'))  
        if valid_Month(monthh ) :
            
            dayy   = int(input('Please enter a day :'))    
            if valid_Day(dayy,monthh) :
                
                Print_Date (dayy,monthh,yearr)
            
except ValueError :
    print ('enter number !!!!!!')
except :
    print ('Something is wrong !!!!!!!')
finally :
    print ('Ok!')

#################################################################################################################################################################

#'Get number from user and show the total date'
# Methode 1:

def Day(): # Defining Day Function
    
    try:
        Day = int(input("Enter Day number: "))  # Getting integer input from user
        
        Modulus = Day % 365    #Getting Input modulus
        
        Years = int (Day / 365)  # to calcute years you have to devide number by 365
        Months= int (Modulus / 30)  # to calculate months you have to devide number's modulus by 30
        Weeks = int (Modulus / 7)   # to calculate weeks you have to devide number's modulus by 7
        Days  = int (Modulus % 7)   # to calculate days you have to get number's modulus by 7
    
        print (" Your Entered Day (" , Day ,  ") is: " , Years , "Year(s) and " , Months , "Months and" , Weeks , " Week(s) and " ,
               Days , "Day(s)")  # printing output
        
        #if for any reason user enters non-integer value (for example string or even leave the input blank), the code will 
            #return : "Invalid Input" message
        
    except:
        print ("Enter Valid Input")

Day()

################################################################################################################################################################

# Get number from user and show the total date
#Methode 2
def Day(): # Defining Day Function
    
    try:
        
        
        
        Day = int (input ("Enter Day Number: "))  # Getting integer input from user
        
        leap = int ((Day % 400 == 0) or (Day % 100 != 0) or (Day % 4 == 0));  # calculating leap year with if statement
        
        if Day > 0 and Day == leap:  # if user's input == leap year and bigger than zero
            
            
            # do calculation
            Modulus = Day % 366
            Years = int (Day / 366)
            Months= int (Modulus / 31)
            #Weeks = int (Modulus / 7)
            Days  = int (Modulus % 7)
            
            print (" Your Entered Day (" , Day ,  ") is: " , Years , "Year(s) and " , Months , "Months and" , Weeks , " Week(s) and " ,
               Days , "Day(s)")
            
            
        #if user's input isn't leap year try to calculate input wth 365 but announce the not leap year message to user:
        else:
            if Day > 0:
                Modulus = Day % 365
                Years = int (Day / 365)
                Months= int (Modulus / 30)
                #Weeks = int (Modulus / 7)
                Days  = int (Modulus % 7)
            
                print (" Your Entered Day (" , Day ,  ") is: " , Years , "Year(s) and " , Months , "Months and" , # " Week(s) and " ,
                   Days , "Day(s) BUT  not a leap year")
                   
            else:  # if user enters negative value this message will pop up :)
                print ("Enter positive number") 
    except:
        print (" Enter Valid Input ")
Day()

################################################################################################################################################################

#Methode 3
def main(): #define main function
    
    dateconverter() #send data that get from client to function dateconverter
    
    
def dateconverter():  #define dataconverter function 
    
    while True: #use whie for repeated geting value
        try: #try for che ValueError
            totaldates = input("How many days do you whant to convert? ") #get total days from client
            inttotaldates = int(totaldates) #convert str to int
            if inttotaldates >=0: #check if the number is posetive
                if inttotaldates >= 365: #check if the number is equal or more than one year
                    year = inttotaldates//365 #return the correct part of number
                    totaldates2 = inttotaldates%365 #return the remainer
                    print (f"{inttotaldates} day/s are {year} year, {totaldates2//31} months and {totaldates2%31} days")
                    break
                else :
                    print (f"{inttotaldates} day/s are {inttotaldates//31} months and {inttotaldates%31} days") 
                    break
            else:
                print(f'{inttotaldates} is not a posetive number. enter a posetive one.')
        except ValueError:
            print(f'{totaldates} is not a number. plz enter a valid number.')

    '''beacause "//" return 
    the devisor and return 0 when quotient smaller than dividend and "%" return remianer and return
    quotient itself when it is smaller than divident, we can used them just that simple for solve 
    the issue'''

main() #call main function

#######################################################################################################################################################################

#Method 4
print('''This program gets a total number of days and calculates 
the number of years, months and days based on it.\n''')

the_days = input("Enter the number of days: ")

try:                             
    the_days = int(the_days)
except:
    print("\n<< Please Enter A Number! >>")
else:
    if int(the_days) <= 0:
        print("\n<< Please Enter A Positive Number! >>")
    else:

# A regular year (r_year) is 365 days.                     
# A leap year (l_year) is 366 days.                        
# Every 4 years (3 + 1) would be 1461 days (3*365 + 366).  

        n = the_days // 1461
        days = the_days % 1461
        l_years = n
        r_years = n * 3
        
        if days == 1460:         # This is a special case. 
            year = days // 365 - 1
            r_years = r_years + year
            months = 11
            days = 29
        else:                    # or: elif days != 1460: 
            year = days // 365
            r_years = r_years + year
            days = days % 365
            if days > 336:
                mon_31 = 6
                mon_30 = 5
                months = mon_31 + mon_30
                days = days - 336
            elif days > 186:
                mon_31 = 6
                mon_30 = (days-186) // 30
                months = mon_31 + mon_30
                days = (days-186) % 30
            else:
                months = days // 31
                days = days % 31
                
        print()
        print(the_days, "days is", l_years, "Leap Year(s),", r_years, "Year(s),", 
              months, "Month(s) and", days, "Day(s).")
              
#############################################################################################################################################################################

#Method 5
try :
    dayy   = int(input('Please enter a day :'))  
    
    y = dayy // 365
    dayy = dayy % 365
    if dayy == 0 :
        m = 0
        d = 0
    elif dayy > 0 and dayy < 187 : # The first 6 month of year : 31 days  
        m = dayy // 31
        d = dayy % 31
    else :                       # The second 6 month of year : 30 days  
        dayy = dayy - 186
        m = (dayy // 30)+ 6
        d = dayy % 30

    print ('The number of year is  {:.^8} and the number of month is {:.^8} and the number of day is {:.^8}'.format(str(y),str(m),str(d)) )
                    
            
except ValueError :
    print ('enter number !!!!!!')
except :
    print ('Something is wrong !!!!!!!')
finally :
    print ('Ok!')
